*********************************************************************
*                                                                   *
*                  A U T O M L S E L E C T   U T I L I T I E S       *
*                                                                   *
*********************************************************************

NAME
    automlselect_utils - Utility Functions for the AutoMLSelect Package

SYNOPSIS
    automlselect_utils_<function>, [options]

DESCRIPTION
    The `automlselect_utils` suite comprises a collection of utility programs
    designed to support the core functionalities of the **AutoMLSelect** package.
    These helper functions facilitate tasks such as dependency checks, logging,
    model persistence, prediction generation, and metrics file validation.

    **Available Utility Functions:**
    - `automlselect_utils_check_dependencies`: Ensures required packages are installed.
    - `automlselect_utils_log`: Logs messages to a specified log file.
    - `automlselect_utils_save_model`: Saves trained model estimates to a file.
    - `automlselect_utils_load_model`: Loads previously saved model estimates.
    - `automlselect_utils_generate_predictions`: Generates predictions from a trained model.
    - `automlselect_utils_validate_metrics_file`: Validates the structure of a metrics CSV file.

UTILITIES

1. automlselect_utils_check_dependencies

    NAME
        automlselect_utils_check_dependencies - Check and Install Required Packages

    SYNOPSIS
        automlselect_utils_check_dependencies

    DESCRIPTION
        Checks if the required user-contributed packages are installed. If any
        required packages are missing, the function attempts to install them
        automatically. Currently, it verifies the presence of the `randomforest`
        package, which is essential for training Random Forest models.

    EXAMPLE
        . automlselect_utils_check_dependencies

        **Explanation:**
        - Checks if the `randomforest` package is installed.
        - If not installed, attempts to install it from SSC.
        - Provides feedback on the installation status.

2. automlselect_utils_log

    NAME
        automlselect_utils_log - Log Messages to a Specified Log File

    SYNOPSIS
        automlselect_utils_log "message", [level(info|warning|error)]

    DESCRIPTION
        Logs messages to a designated log file (`automlselect.log`). This utility
        is useful for tracking the workflow and debugging purposes within the
        AutoMLSelect package. Each log entry includes a timestamp, the severity
        level, and the message content.

    OPTIONS
        "message"
            The log message to be recorded.

        level(info|warning|error)
            Specifies the severity level of the log message.
            - `info`    : General informational messages.
            - `warning` : Indications of potential issues.
            - `error`   : Error messages indicating failures.

    EXAMPLE
        . automlselect_utils_log "Starting model training process.", level(info)

        **Explanation:**
        - Logs an informational message indicating the start of the model training process.
        - The message is appended to `automlselect.log` with a timestamp and `[info]` tag.

3. automlselect_utils_save_model

    NAME
        automlselect_utils_save_model - Save Trained Model Estimates to a File

    SYNOPSIS
        automlselect_utils_save_model, ///
            model_name(string) ///
            save_path(string)

    DESCRIPTION
        Saves the estimates of a trained model to a specified `.ster` file. This
        utility is essential for persisting model results, allowing for later
        evaluation or deployment without retraining.

    OPTIONS
        model_name(string)
            The name of the stored estimates to save, as stored using `estimates store`.

        save_path(string)
            The file path where the model estimates will be saved. The file extension
            should be `.ster`.

    EXAMPLE
        . automlselect_utils_save_model, ///
              model_name(linear_regression_model) ///
              save_path("models/lm_income.ster")

        **Explanation:**
        - Saves the estimates of the `linear_regression_model` to `models/lm_income.ster`.
        - Provides feedback on the success or failure of the save operation.

4. automlselect_utils_load_model

    NAME
        automlselect_utils_load_model - Load Previously Saved Model Estimates

    SYNOPSIS
        automlselect_utils_load_model, ///
            load_path(string)

    DESCRIPTION
        Loads previously saved model estimates from a specified `.ster` file.
        This utility allows users to reuse models without the need to retrain them,
        facilitating efficient workflows.

    OPTIONS
        load_path(string)
            The file path from which the model estimates will be loaded. The file
            extension should be `.ster`.

    EXAMPLE
        . automlselect_utils_load_model, ///
              load_path("models/lm_income.ster")

        **Explanation:**
        - Loads the model estimates from `models/lm_income.ster` into Stata's estimates system.
        - Provides feedback on the success or failure of the load operation.

5. automlselect_utils_generate_predictions

    NAME
        automlselect_utils_generate_predictions - Generate Predictions from a Trained Model

    SYNOPSIS
        automlselect_utils_generate_predictions, ///
            model_name(string) ///
            prediction_var(string)

    DESCRIPTION
        Generates predictions from a trained model and adds them as a new variable
        in the dataset. Supports both regression and classification models by
        determining the model type based on stored estimates.

    OPTIONS
        model_name(string)
            The name of the stored estimates to use for generating predictions.

        prediction_var(string)
            The name of the new variable that will store the predictions.

    EXAMPLE
        . automlselect_utils_generate_predictions, ///
              model_name(linear_regression_model) ///
              prediction_var(predicted_income)

        **Explanation:**
        - Uses the `linear_regression_model` to generate predictions.
        - Stores the predictions in a new variable named `predicted_income`.
        - Provides feedback on the success or failure of the prediction generation.

6. automlselect_utils_validate_metrics_file

    NAME
        automlselect_utils_validate_metrics_file - Validate Metrics CSV File Structure

    SYNOPSIS
        automlselect_utils_validate_metrics_file, ///
            file_path(string) ///
            task(string)

    DESCRIPTION
        Validates the structure of the metrics CSV file to ensure it contains the
        necessary columns for model selection. This utility checks for the presence
        of a `model` column and verifies that relevant performance metrics are
        included based on the specified task type.

    OPTIONS
        file_path(string)
            The path to the metrics CSV file to validate.

        task(string)
            The type of task: `regression` or `classification`. Determines which
            performance metrics are expected in the file.

    EXAMPLE
        . automlselect_utils_validate_metrics_file, ///
              file_path("model_metrics.csv") ///
              task(regression)

        **Explanation:**
        - Validates that `model_metrics.csv` contains a `model` column and at least one
          regression-specific metric (e.g., RMSE, R-squared).
        - Provides feedback on the validation status.

NOTES
    - **Usage Context:**
        These utility functions are intended to be used as supporting tools within the
        **AutoMLSelect** package's automated workflow. While they can be invoked
        directly by users for advanced operations, they are primarily designed to
        enhance the functionality and robustness of the main AutoMLSelect commands.

    - **Error Handling:**
        Each utility function includes comprehensive input validation and error
        handling. Users will receive informative messages if inputs are missing,
        invalid, or if operations fail.

    - **Log File Management:**
        The `automlselect_utils_log` function writes to `automlselect.log` by default.
        Users can modify the log file path within the utility function if needed.

    - **Model Persistence:**
        Ensure that models are correctly stored using `estimates store` before attempting
        to save or generate predictions. The `save_model` and `load_model` utilities
        rely on these stored estimates.

    - **Dependencies:**
        The `automlselect_utils_check_dependencies` function ensures that required
        packages (e.g., `randomforest`) are installed. It is recommended to run this
        utility at the beginning of your AutoMLSelect workflow.

AUTHOR
    Developed by [Your Name or Organization], 2024.

VERSION
    1.0

SEE ALSO
    automlselect, automlselect_preprocess, automlselect_train, automlselect_evaluate, automlselect_select, train_linear_regression, train_logistic_regression, train_random_forest
