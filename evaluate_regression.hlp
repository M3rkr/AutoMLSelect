/***********************************************************************
 *                                                                     *
 *                  A U T O M L S E L E C T   P A C K A G E           *
 *                                                                     *
 *                       E V A L U A T E _ R E G R E S S I O N         *
 *                                                                     *
 ***********************************************************************/

/*! version 1.0
    -------------------------------------------------------------------------
    NAME
        evaluate_regression - Evaluate Regression Model Performance

    SYNOPSIS
        evaluate_regression, ///
            target(varname) ///
            prediction(varname) ///
            [ save_metrics(string) ]

    DESCRIPTION
        The `evaluate_regression` command assesses the performance of a
        regression model by calculating key metrics such as Root Mean
        Squared Error (RMSE), R-squared, Mean Absolute Error (MAE), and
        Mean Absolute Percentage Error (MAPE). This evaluation provides
        insights into the accuracy and reliability of the regression model's
        predictions.

        **Key Functionalities:**
        - **Residual Analysis:** Computes residuals to assess model fit.
        - **Performance Metrics:** Calculates RMSE, R-squared, MAE, and MAPE.
        - **Metrics Saving:** Optionally saves the calculated metrics to a CSV file
          for further analysis or reporting.

    OPTIONS
        target(varname)
            Specifies the name of the target (actual) variable in the dataset.
            This variable should contain continuous numeric values representing
            the true outcome values.

        prediction(varname)
            Specifies the name of the prediction variable in the dataset.
            This variable contains the predicted values generated by the regression model.

        save_metrics(string)
            (Optional) Specifies the filename (with `.csv` extension) to which
            the calculated performance metrics will be saved. If provided, the metrics
            will be exported to the designated CSV file.

    EXAMPLES

        1. **Evaluating a Regression Model and Saving Metrics**

            Suppose you have a dataset `housing_data.dta` with the target variable `Price`
            and the prediction variable `Price_pred`. You want to evaluate the model's
            performance and save the metrics to `housing_metrics.csv`.

            ```stata
            . evaluate_regression, ///
                  target(Price) ///
                  prediction(Price_pred) ///
                  save_metrics("housing_metrics.csv")
            ```

            **Explanation:**
            - **Target Variable:** `Price` (actual values).
            - **Prediction Variable:** `Price_pred` (predicted values).
            - **Saving Metrics:** Exports RMSE, R-squared, MAE, and MAPE to `housing_metrics.csv`.

        2. **Evaluating a Regression Model Without Saving Metrics**

            Consider a dataset `sales_data.dta` with the target variable `Sales` and the prediction
            variable `Sales_pred`. You want to evaluate the model's performance without saving the metrics.

            ```stata
            . evaluate_regression, ///
                  target(Sales) ///
                  prediction(Sales_pred)
            ```

            **Explanation:**
            - **Target Variable:** `Sales` (actual values).
            - **Prediction Variable:** `Sales_pred` (predicted values).
            - **No Saving Metrics:** Metrics will be displayed in the Stata Results window.

        3. **Evaluating a Regression Model and Saving Metrics**

            You have a dataset `economic_data.dta` with the target variable `GDP` and the prediction
            variable `GDP_pred`. You want to evaluate the model and save the metrics to `gdp_metrics.csv`.

            ```stata
            . evaluate_regression, ///
                  target(GDP) ///
                  prediction(GDP_pred) ///
                  save_metrics("gdp_metrics.csv")
            ```

            **Explanation:**
            - **Target Variable:** `GDP` (actual values).
            - **Prediction Variable:** `GDP_pred` (predicted values).
            - **Saving Metrics:** Exports RMSE, R-squared, MAE, and MAPE to `gdp_metrics.csv`.

    NOTES
        - **Data Requirements:**
            - The target and prediction variables must exist in the dataset and contain continuous numeric values.
            - The dataset should not contain missing values in the target or prediction variables. Handle missing data prior to evaluation.

        - **Metric Interpretation:**
            - **RMSE (Root Mean Squared Error):** Measures the average magnitude of the errors between predicted and actual values. Lower values indicate better model performance.
            - **R-squared:** Represents the proportion of variance in the target variable explained by the model. Values range from 0 to 1, with higher values indicating better fit.
            - **MAE (Mean Absolute Error):** Measures the average absolute difference between predicted and actual values. Lower values indicate better performance.
            - **MAPE (Mean Absolute Percentage Error):** Measures the average absolute percentage difference between predicted and actual values. Expressed as a percentage, lower values indicate better performance.

        - **Residual Analysis:**
            - The command calculates residuals (`actual - predicted`) to assess the distribution and magnitude of errors.
            - It is essential to check for patterns in residuals to ensure model assumptions are met.

        - **Handling Undefined Metrics:**
            - If any metric cannot be computed due to data issues (e.g., division by zero), it will be set to missing (`.`).

        - **Performance Optimization:**
            - For large datasets, consider using `quietly` prefixes to control the verbosity of output during evaluation.

        - **Integration with AutoMLSelect Workflow:**
            - Typically, `evaluate_regression` is used as part of the broader `automlselect` command workflow, which includes data preprocessing, model training, evaluation, and selection.

    AUTHOR
        Developed by [Your Name or Organization], 2024.

    VERSION
        1.0

    SEE ALSO
        automlselect, automlselect_preprocess, automlselect_train, automlselect_evaluate, automlselect_select, evaluate_classification
